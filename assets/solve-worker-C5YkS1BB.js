(function(){"use strict";onmessage=t=>{console.log("Worker received message:",t.data),f(t.data.bitBoard,t.data.boardSize).then(e=>postMessage({solution:e})),postMessage("worker onmessage returning")},console.log("⚠️ Todo: Debug imports from worker code");function i(t,e,o,n){let s=t;return s^=1<<o*e+n,o>0&&(s^=1<<(o-1)*e+n),o<e-1&&(s^=1<<(o+1)*e+n),n>0&&(s^=1<<o*e+n-1),n<e-1&&(s^=1<<o*e+n+1),s}async function f(t,e){const o=new Set([t]),n=new Map([[t,-1]]);let s=[],g=[t],c=0;for(console.log("original state:",t,"with size:",e);g.length;){s=g,g=[],console.log("exploring depth",c++);for(const u of s){if(u===0){console.log("⚠️ Solution found!");const r=[];for(let l=u;l!==-1;l=n.get(l))r.push(l);return r.reverse()}for(let r=0;r<e;r++)for(let l=0;l<e;l++){const a=i(u,e,r,l);o.has(a)||(o.add(a),n.set(a,u),g.push(a))}}}return console.log("❌ Bailing out"),null}})();
